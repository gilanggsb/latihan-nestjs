var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.283,1,2.053]],["body/controllers/AppController.html",[0,2.044,1,3.27,2,1.63,3,0.39,4,0.337,5,0.337,6,3.377,7,0.688,8,1.593,9,4.851,10,1.775,11,0.032,12,0.907,13,4.045,14,1.27,15,2.044,16,0.489,17,0.688,18,2.913,19,3.377,20,0.39,21,0.02,22,1.939,23,4.045,24,1.38,25,4.045,26,0.025,27,0.025]],["title/modules/AppModule.html",[28,1,29,2.053]],["body/modules/AppModule.html",[1,2.916,2,1.561,3,0.261,4,0.226,5,0.226,11,0.032,16,0.582,17,0.461,18,2.856,19,2.262,20,0.261,21,0.013,26,0.019,27,0.019,28,1.217,29,4.006,30,1.092,31,1.561,32,2.262,33,2.262,34,2.262,35,2.856,36,3.15,37,3.15,38,3.15,39,3.15,40,1.858,41,1.299,42,1.299,43,2.71,44,2.037,45,2.813,46,2.71,47,2.71,48,2.71,49,2.71,50,1.967,51,1.571,52,2.71,53,2.71,54,2.71,55,2.71,56,2.262,57,1.967,58,2.262,59,2.262,60,2.71,61,2.71,62,1.967,63,1.967,64,2.71,65,2.262,66,2.262,67,1.967,68,1.747,69,2.71,70,2.71,71,2.71,72,2.71]],["title/injectables/AppService.html",[18,1.674,73,0.654]],["body/injectables/AppService.html",[3,0.409,4,0.354,5,0.354,7,0.723,8,1.643,9,4.936,11,0.031,12,0.953,14,1.334,15,2.107,16,0.409,17,0.723,18,2.749,20,0.409,21,0.021,24,1.449,26,0.026,27,0.026,73,1.073,74,1.712,75,3.547,76,4.249,77,4.249,78,4.249]],["title/controllers/AuthController.html",[0,1.283,79,2.053]],["body/controllers/AuthController.html",[0,0.904,2,0.904,3,0.216,4,0.187,5,0.376,7,0.382,8,1.06,10,1.98,11,0.032,12,1.012,14,1.417,15,0.904,16,0.523,17,0.382,20,0.216,21,0.011,22,1.076,24,1.539,26,0.017,27,0.017,79,2.176,80,1.874,81,1.629,82,2.245,83,2.343,84,2.817,85,2.817,86,2.817,87,2.817,88,2.245,89,2.245,90,2.245,91,1.671,92,1.539,93,1.539,94,3.511,95,1.98,96,1.874,97,2.615,98,3.375,99,2.245,100,1.085,101,2.542,102,1.874,103,2.615,104,3.375,105,2.245,106,2.245,107,4.056,108,2.245,109,2.245,110,2.245,111,2.245,112,1.629,113,1.629,114,3.375,115,1.874,116,3.375,117,1.774,118,1.874,119,1.874,120,1.874,121,1.301,122,2.245,123,2.245,124,1.629,125,1.874,126,0.904,127,1.447,128,1.874,129,3.375,130,2.245,131,1.629,132,0.832,133,2.245,134,2.245,135,1.629,136,2.245,137,2.371,138,2.245,139,2.245,140,2.245,141,2.817,142,2.817,143,2.245,144,2.245,145,2.245,146,2.245,147,2.245,148,1.874,149,0.985,150,1.629,151,2.245,152,2.245,153,2.245,154,2.245,155,2.245,156,2.245,157,2.245,158,2.245,159,2.245,160,2.245]],["title/injectables/AuthGuard.html",[73,0.654,121,1.846]],["body/injectables/AuthGuard.html",[3,0.528,4,0.289,5,0.289,7,0.591,8,1.443,11,0.032,12,1.031,14,1.443,16,0.443,17,0.591,20,0.334,21,0.017,24,1.567,26,0.023,27,0.023,73,0.943,74,1.398,91,1.702,92,1.567,93,1.567,100,0.778,121,2.987,161,2.897,162,4.596,163,4.596,164,4.596,165,5.485,166,3.47,167,3.47,168,4.596,169,3.307,170,3.47,171,5.152,172,4.596,173,3.47,174,2.237,175,2.012,176,3.47,177,3.47,178,2.519,179,2.012]],["title/modules/AuthModule.html",[28,1,35,1.674]],["body/modules/AuthModule.html",[2,1.87,3,0.339,4,0.294,5,0.294,11,0.032,16,0.552,17,0.6,20,0.339,21,0.017,26,0.023,27,0.023,28,1.458,30,1.419,31,1.87,35,3.202,40,2.225,41,1.689,42,1.689,44,2.44,45,2.557,79,3.346,117,3.095,118,2.941,169,2.042,174,2.271,180,2.941,181,2.941,182,3.413,183,3.523,184,3.523,185,3.523,186,3.523,187,3.523,188,3.523,189,2.271,190,3.523,191,3.523,192,2.557]],["title/injectables/AuthService.html",[73,0.654,117,1.674]],["body/injectables/AuthService.html",[3,0.143,4,0.123,5,0.123,7,0.252,8,0.763,11,0.033,12,0.887,14,1.124,15,1.442,16,0.41,17,0.252,20,0.143,21,0.007,22,0.709,24,1.349,26,0.012,27,0.012,68,1.566,73,0.499,74,0.596,83,2.108,84,2.028,85,2.028,86,2.581,87,2.028,91,1.465,92,1.45,93,1.349,95,1.571,96,2.028,97,2.075,100,0.887,101,2.079,102,2.028,103,2.075,117,1.277,119,1.235,120,1.235,126,1.442,127,0.953,137,2.75,150,3.086,169,2.719,178,3.798,179,2.816,193,1.235,194,0.857,195,1.074,196,1.571,197,2.245,198,1.479,199,1.764,200,2.43,201,2.038,202,1.479,203,3.955,204,1.479,205,1.479,206,2.43,207,1.479,208,3.086,209,1.074,210,1.074,211,1.479,212,1.479,213,1.235,214,1.074,215,2.599,216,3.224,217,2.43,218,3.58,219,1.882,220,2.43,221,1.479,222,1.479,223,1.479,224,1.479,225,1.479,226,1.479,227,1.479,228,4.251,229,3.092,230,2.599,231,3.092,232,1.235,233,1.235,234,2.599,235,3.372,236,2.989,237,2.989,238,2.599,239,1.235,240,1.479,241,2.028,242,2.028,243,3.092,244,1.479,245,1.479,246,1.479,247,2.581,248,2.43,249,1.479,250,1.479,251,1.479,252,1.479,253,1.479,254,1.479,255,2.43,256,1.479,257,1.993,258,2.43,259,2.028,260,1.479,261,1.235,262,1.235,263,1.235,264,1.479,265,2.43,266,1.479,267,1.479,268,1.235,269,1.479,270,1.235]],["title/classes/CreateSchoolDto.html",[21,0.016,271,1.674]],["body/classes/CreateSchoolDto.html",[3,0.32,4,0.277,5,0.277,7,0.565,10,2.365,11,0.032,12,1.208,15,2.422,16,0.43,20,0.32,21,0.022,26,0.022,27,0.022,93,1.974,100,1.208,132,1.23,149,1.958,219,2.649,271,2.346,272,1.592,273,2.772,274,5.04,275,5.04,276,5.04,277,3.24,278,3.321,279,2.411,280,3.321,281,3.321,282,3.321,283,3.321,284,3.624,285,3.24,286,3.624,287,3.321,288,3.624,289,1.925,290,3.321]],["title/classes/CreateTaskDto.html",[21,0.016,291,1.674]],["body/classes/CreateTaskDto.html",[3,0.36,4,0.312,5,0.312,7,0.636,10,2.116,11,0.032,12,1.197,15,2.273,16,0.465,20,0.36,21,0.024,26,0.024,27,0.024,100,1.197,132,1.384,149,2.116,201,2.311,272,1.791,277,3.5,284,3.442,286,3.442,288,3.442,289,2.165,291,2.535,292,3.118,293,4.458,294,5.34,295,5.34,296,3.736,297,3.736,298,3.736]],["title/modules/HelpersModule.html",[28,1,36,1.846]],["body/modules/HelpersModule.html",[3,0.375,4,0.325,5,0.325,11,0.031,16,0.477,17,0.663,20,0.375,21,0.019,26,0.024,27,0.024,28,1.555,30,1.568,31,1.995,36,3.562,40,2.373,41,1.866,42,1.866,44,2.602,67,3.594,126,2.579,299,3.249,300,3.249,301,3.249,302,3.893,303,4.133,304,3.893]],["title/injectables/HelpersService.html",[73,0.654,126,1.283]],["body/injectables/HelpersService.html",[3,0.161,4,0.139,5,0.443,7,0.284,8,0.842,11,0.033,12,1.009,14,1.208,15,1.904,16,0.433,17,0.284,20,0.161,21,0.008,22,0.801,24,1.146,26,0.013,27,0.013,50,1.213,51,0.969,57,2.44,59,1.395,62,1.213,63,1.213,65,1.395,66,1.395,68,1.729,73,0.55,74,0.673,83,1.354,91,1.667,92,1.437,93,1.437,94,2.793,95,0.733,100,1.137,101,2.215,124,1.213,126,1.081,149,1.177,169,2.849,178,1.947,179,2.23,189,1.077,192,1.947,194,0.969,201,1.844,208,2.793,209,1.213,216,1.729,235,2.48,236,1.395,238,1.213,239,1.395,247,2.239,261,3.755,262,1.395,263,3.946,270,2.239,305,1.395,306,3.361,307,2.683,308,3.847,309,2.683,310,2.683,311,1.671,312,4.499,313,1.671,314,2.683,315,1.671,316,3.361,317,1.671,318,1.671,319,4.213,320,4.213,321,1.671,322,2.683,323,2.683,324,1.671,325,1.395,326,2.683,327,1.671,328,3.361,329,1.395,330,1.395,331,2.683,332,2.683,333,2.683,334,2.683,335,2.683,336,3.847,337,2.683,338,4.499,339,2.683,340,2.683,341,2.683,342,2.683,343,3.847,344,3.847,345,3.361,346,2.683,347,2.683,348,2.683,349,2.683,350,1.671,351,1.671,352,1.671,353,1.671,354,1.395,355,1.671,356,0.969,357,1.671,358,2.683,359,1.671,360,1.671,361,1.671,362,1.671,363,1.671]],["title/injectables/JwtStrategy.html",[73,0.654,182,1.846]],["body/injectables/JwtStrategy.html",[3,0.332,4,0.287,5,0.287,7,0.586,8,1.436,11,0.032,12,1.025,14,1.082,16,0.527,17,0.586,20,0.332,21,0.017,24,1.175,26,0.023,27,0.023,51,1.997,63,2.5,73,0.938,74,1.388,83,2.068,91,1.276,92,1.56,93,1.175,95,1.512,100,0.772,174,2.22,175,1.997,182,2.651,189,2.948,192,2.5,194,2.976,219,1.811,257,2.22,325,2.875,354,2.875,364,2.875,365,4.573,366,3.445,367,4.573,368,3.445,369,3.445,370,3.445,371,3.445,372,2.875,373,3.445,374,3.445,375,3.445,376,3.445,377,3.445,378,3.445,379,3.445,380,3.445,381,3.445,382,2.875,383,3.445]],["title/classes/LoginDto.html",[21,0.016,97,1.846]],["body/classes/LoginDto.html",[3,0.364,4,0.315,5,0.315,7,0.644,10,2.133,11,0.031,12,1.09,15,2.284,16,0.468,20,0.364,21,0.024,26,0.024,27,0.024,97,2.817,100,1.09,132,1.401,149,2.133,219,2.823,230,3.899,272,1.813,279,2.745,284,3.462,285,3.528,286,3.462,288,3.462,289,2.192,384,3.157,385,3.781,386,3.157,387,3.781,388,3.157,389,3.157,390,3.157,391,3.157]],["title/modules/PrismaModule.html",[28,1,37,1.846]],["body/modules/PrismaModule.html",[3,0.375,4,0.325,5,0.325,11,0.031,16,0.477,17,0.663,20,0.375,21,0.019,26,0.024,27,0.024,28,1.555,30,1.568,31,1.995,37,3.562,40,2.373,41,1.866,42,1.866,44,2.602,67,3.594,196,2.809,303,4.133,392,3.249,393,3.249,394,3.249,395,3.893,396,3.893]],["title/injectables/PrismaService.html",[73,0.654,196,1.398]],["body/injectables/PrismaService.html",[3,0.342,4,0.296,5,0.296,7,0.604,8,1.465,11,0.032,12,1.046,14,1.465,16,0.449,17,0.604,20,0.342,21,0.018,26,0.023,27,0.023,73,0.957,74,1.43,83,2.423,91,1.315,92,1.211,93,1.211,100,0.796,137,2.452,175,2.704,196,2.047,397,2.963,398,5.21,399,4.665,400,5.9,401,4.665,402,5.534,403,3.55,404,2.963,405,3.55,406,2.963,407,3.55,408,3.55,409,3.55,410,3.55]],["title/classes/RegisterDto.html",[21,0.016,103,1.846]],["body/classes/RegisterDto.html",[3,0.343,4,0.297,5,0.297,7,0.607,10,2.291,11,0.032,12,1.171,15,2.379,16,0.451,20,0.343,21,0.023,26,0.023,27,0.023,92,1.78,100,1.171,103,2.711,132,1.32,149,2.052,219,2.744,230,3.789,272,1.708,277,2.587,279,2.587,284,3.572,285,3.395,286,3.572,288,3.572,289,2.066,386,2.975,388,2.975,389,2.975,390,2.975,391,2.975,411,2.975,412,3.564,413,3.564,414,3.564]],["title/controllers/SchoolController.html",[0,1.283,415,2.053]],["body/controllers/SchoolController.html",[0,0.996,2,0.996,3,0.238,4,0.206,5,0.206,7,0.421,8,1.139,10,2.21,11,0.032,12,1.129,14,1.582,16,0.456,17,0.421,20,0.238,21,0.012,22,1.185,24,1.718,26,0.018,27,0.018,81,1.794,83,2.453,91,1.752,92,1.613,93,1.613,95,2.21,100,1.061,101,2.767,112,2.632,113,3.117,131,1.794,132,0.916,135,1.794,201,2.523,271,2.859,356,1.433,415,2.337,416,2.063,417,2.063,418,3.027,419,3.027,420,3.948,421,3.626,422,3.584,423,2.063,424,2.472,425,2.063,426,3.626,427,2.472,428,4.394,429,2.472,430,2.472,431,3.626,432,2.472,433,2.063,434,3.626,435,2.472,436,2.063,437,2.063,438,1.906,439,2.063,440,2.063,441,2.472,442,2.472,443,2.472,444,2.472,445,2.472,446,2.472,447,2.472,448,2.472,449,2.472,450,2.472,451,2.472]],["title/modules/SchoolModule.html",[28,1,38,1.846]],["body/modules/SchoolModule.html",[2,2.016,3,0.381,4,0.33,5,0.33,11,0.032,16,0.529,17,0.674,20,0.381,21,0.02,26,0.025,27,0.025,28,1.572,30,1.595,31,2.016,38,3.521,40,2.399,41,1.898,42,1.898,44,2.63,415,3.537,438,3.192,439,3.305,452,3.305,453,3.305,454,3.959,455,3.959]],["title/injectables/SchoolService.html",[73,0.654,438,1.674]],["body/injectables/SchoolService.html",[3,0.176,4,0.153,5,0.153,7,0.311,8,0.905,11,0.033,12,1.049,14,1.384,16,0.424,17,0.311,20,0.176,21,0.009,22,0.877,24,1.942,26,0.014,27,0.014,73,0.592,74,0.737,83,2.319,91,1.632,92,1.502,93,1.502,95,1.933,100,0.988,101,2.575,126,1.631,127,1.179,137,2.315,194,1.06,195,1.328,196,1.777,197,2.59,199,2.092,201,2.503,210,1.328,214,1.328,215,3.198,216,2.84,232,3.38,233,3.677,234,3.198,235,2.84,257,2.3,259,2.406,271,2.128,356,1.671,417,4.997,418,2.406,419,2.406,420,3.38,422,2.406,423,2.406,425,2.406,428,3.907,433,2.406,438,1.515,440,1.527,456,1.527,457,2.883,458,1.829,459,1.829,460,1.829,461,1.829,462,2.883,463,1.829,464,2.61,465,1.829,466,1.829,467,1.829,468,1.527,469,4.405,470,3.568,471,1.829,472,2.883,473,1.829,474,1.829,475,1.829,476,2.883,477,1.527,478,1.829,479,1.829]],["title/controllers/TaskController.html",[0,1.283,480,2.053]],["body/controllers/TaskController.html",[0,0.92,2,0.92,3,0.22,4,0.19,5,0.19,7,0.389,8,1.074,10,2.138,11,0.032,12,1.093,14,1.53,16,0.493,17,0.389,20,0.22,21,0.011,22,1.094,24,1.662,26,0.017,27,0.017,81,1.657,83,2.42,91,1.686,92,1.552,93,1.552,95,2.138,100,1.02,112,2.482,113,2.482,115,1.906,121,1.324,128,1.906,131,1.657,132,0.846,135,1.657,137,2.561,141,4.067,142,4.067,201,2.672,291,2.392,356,1.324,436,1.906,437,1.906,480,2.204,481,1.906,482,1.906,483,2.854,484,2.854,485,3.798,486,2.854,487,3.421,488,2.283,489,2.283,490,2.283,491,5.114,492,1.906,493,2.283,494,2.283,495,4.269,496,2.283,497,2.283,498,1.906,499,2.283,500,2.283,501,1.906,502,2.638,503,2.283,504,2.283,505,1.797,506,1.906,507,1.906,508,1.906,509,2.283,510,2.283,511,2.283,512,2.283,513,2.283,514,2.283,515,2.283,516,2.283,517,2.283,518,2.283,519,2.283,520,2.283,521,2.283,522,2.283,523,2.283]],["title/modules/TaskModule.html",[28,1,39,1.846]],["body/modules/TaskModule.html",[2,1.933,3,0.357,4,0.309,5,0.309,11,0.032,16,0.542,17,0.631,20,0.357,21,0.018,26,0.024,27,0.024,28,1.507,30,1.493,31,1.933,35,3.138,39,3.569,40,2.3,41,1.776,42,1.776,44,2.522,45,3.482,480,3.429,505,3.138,506,3.094,524,3.094,525,3.094,526,3.706,527,3.706,528,3.706,529,3.706]],["title/injectables/TaskService.html",[73,0.654,505,1.674]],["body/injectables/TaskService.html",[3,0.167,4,0.145,5,0.145,7,0.296,8,0.869,11,0.033,12,1.026,14,1.437,16,0.441,17,0.296,20,0.167,21,0.009,24,1.796,26,0.014,27,0.014,68,2.535,73,0.568,74,0.7,83,2.294,91,1.591,92,1.561,93,1.465,94,2.503,95,1.885,100,0.963,101,2.619,126,1.584,127,1.119,137,2.258,150,1.26,169,1.007,179,2.49,194,1.604,195,1.26,196,1.726,197,2.503,199,2.008,201,2.462,208,1.26,209,1.26,210,1.26,214,2.503,215,3.118,216,2.769,219,0.913,234,3.118,235,2.769,237,3.585,238,3.118,241,1.449,242,3.585,257,2.769,268,1.449,291,2.067,293,2.309,356,1.007,468,1.449,477,1.449,482,4.567,483,2.309,484,2.309,485,3.283,486,2.309,487,2.309,492,2.309,495,3.82,498,2.309,501,2.309,502,2.28,505,1.454,507,1.449,508,1.449,530,1.449,531,1.736,532,2.766,533,1.736,534,1.736,535,1.736,536,1.736,537,1.736,538,1.736,539,1.449,540,1.736,541,1.736,542,3.933,543,1.736,544,4.295,545,1.736,546,2.766,547,1.736,548,1.736,549,1.736]],["title/classes/UpdateSchoolDto.html",[21,0.016,464,2.053]],["body/classes/UpdateSchoolDto.html",[3,0.435,4,0.377,5,0.377,11,0.031,16,0.523,20,0.435,21,0.022,26,0.027,27,0.027,132,1.674,175,2.619,271,2.854,272,2.166,464,3.499,550,3.771,551,3.771,552,4.518]],["title/classes/UpdateTaskDto.html",[21,0.016,502,1.846]],["body/classes/UpdateTaskDto.html",[3,0.435,4,0.377,5,0.377,11,0.031,16,0.523,20,0.435,21,0.022,26,0.027,27,0.027,132,1.674,175,2.619,272,2.166,291,2.854,502,3.147,551,3.771,553,3.771,554,4.518]],["title/coverage.html",[555,3.149]],["body/coverage.html",[0,2.072,1,1.915,5,0.248,6,2.48,11,0.032,18,1.561,21,0.028,26,0.02,27,0.02,51,1.722,73,1.202,75,2.48,79,1.915,80,2.48,97,1.722,100,0.666,103,1.722,117,1.561,121,1.722,126,1.197,161,2.48,179,1.722,182,1.722,193,2.48,196,1.304,271,1.561,273,2.48,291,1.561,292,2.48,305,2.48,364,2.48,384,2.48,397,2.48,411,2.48,415,1.915,416,2.48,438,1.561,456,2.48,464,1.915,480,1.915,481,2.48,502,1.722,505,1.561,530,2.48,550,2.48,553,2.48,555,2.156,556,2.97,557,2.97,558,2.97,559,6.368,560,4.135,561,4.135,562,5.143,563,4.756,564,4.135,565,2.48,566,2.97,567,5.143,568,4.135,569,2.48,570,2.97,571,2.48,572,2.97,573,2.97,574,2.97,575,2.97]],["title/dependencies.html",[31,1.542,576,2.224]],["body/dependencies.html",[11,0.032,17,0.671,21,0.025,26,0.025,27,0.025,31,1.588,50,2.862,56,3.291,57,2.862,124,2.862,125,3.291,132,1.46,174,2.541,189,2.541,213,3.291,289,2.285,372,4.166,406,3.291,539,3.291,577,5.477,578,3.942,579,3.942,580,3.942,581,3.942,582,3.942,583,3.942,584,3.942,585,3.942,586,3.942,587,3.942,588,3.942,589,3.942,590,3.942,591,3.942,592,3.942,593,3.942]],["title/miscellaneous/functions.html",[594,1.717,595,3.196]],["body/miscellaneous/functions.html",[7,0.825,11,0.028,26,0.028,27,0.028,569,4.047,571,5.005,594,3.125,595,4.047,596,4.848]],["title/index.html",[7,0.453,597,2.665,598,2.665]],["body/index.html",[4,0.281,11,0.031,26,0.022,27,0.022,58,2.813,404,2.813,555,2.446,599,3.37,600,3.37,601,4.506,602,3.37,603,3.37,604,3.37,605,3.37,606,3.37,607,3.37,608,2.813,609,5.077,610,3.37,611,3.37,612,3.37,613,3.37,614,5.937,615,3.37,616,3.37,617,5.814,618,3.37,619,3.37,620,4.506,621,3.37,622,3.37,623,3.37,624,3.37,625,4.506,626,4.506,627,3.37,628,3.37,629,3.37,630,4.506,631,4.506,632,3.37,633,3.37,634,3.37,635,3.37,636,3.37,637,2.813,638,3.37,639,3.37,640,3.37,641,3.37,642,3.37,643,3.37,644,3.37,645,3.37,646,3.37,647,2.813,648,3.37,649,3.37,650,3.37,651,3.37,652,3.37,653,3.37,654,2.813]],["title/modules.html",[30,1.748]],["body/modules.html",[11,0.026,26,0.026,27,0.026,29,2.79,30,1.744,35,2.275,36,2.509,37,2.509,38,2.509,39,2.509,637,5.183,655,6.209,656,6.209,657,6.209]],["title/overview.html",[658,3.622]],["body/overview.html",[2,1.232,11,0.031,18,2.539,26,0.021,27,0.021,29,4.031,30,1.232,31,1.7,32,2.553,33,2.553,34,2.553,35,3.1,36,3.274,37,3.274,38,3.167,39,3.355,40,2.022,41,1.466,42,1.466,74,1.232,117,2.539,126,2.332,180,2.553,181,2.553,182,2.8,196,2.54,272,1.466,299,2.553,300,2.553,301,2.553,392,2.553,393,2.553,394,2.553,438,2.539,452,2.553,453,2.553,505,2.539,524,2.553,525,2.553,658,2.553,659,4.219,660,3.059,661,3.059]],["title/properties.html",[149,1.68,576,2.224]],["body/properties.html",[11,0.031,26,0.028,27,0.028,149,2.095,608,3.985,647,3.985,654,3.985,662,4.774,663,4.774,664,4.774]],["title/miscellaneous/variables.html",[594,1.717,665,3.196]],["body/miscellaneous/variables.html",[7,0.78,11,0.031,26,0.027,27,0.027,51,3.175,62,3.328,100,1.028,148,3.827,329,3.827,330,3.827,382,3.827,565,3.827,594,2.955,665,3.827,666,4.585,667,4.585,668,4.585]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"modules/HelpersModule.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":663,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":562,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":563,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":568,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["10.0.3",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["14",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["2.4.3",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["3600",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":660,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["4.13.0",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":659,"title":{},"body":{"overview.html":{}}}],["6.3.0",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":661,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["accesstoken",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":274,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["allow",{"_index":336,"title":{},"body":{"injectables/HelpersService.html":{}}}],["already",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":638,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["apibearerauth('accesstoken",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["apibody",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes('multipart/form",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":284,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["apiproperty()@isnotempty()@isstring",{"_index":277,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/RegisterDto.html":{}}}],["apiproperty()@isnotempty()@isstring()@isemail",{"_index":279,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["apiproperty()@isnotempty()@isstring()@isphonenumber('id",{"_index":281,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["apiproperty()@isnotempty()@isstring()@minlength(6)@maxlength(20",{"_index":386,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["apitags",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["apitags('auth",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('school",{"_index":441,"title":{},"body":{"controllers/SchoolController.html":{}}}],["apitags('task",{"_index":510,"title":{},"body":{"controllers/TaskController.html":{}}}],["app",{"_index":404,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":410,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":607,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["auth",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":79,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":121,"title":{"injectables/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["authguardpassport",{"_index":173,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authguardpassport('jwt",{"_index":176,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authmodule",{"_index":35,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":647,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":117,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["avatarmulteroptions",{"_index":306,"title":{},"body":{"injectables/HelpersService.html":{}}}],["await",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["backers",{"_index":639,"title":{},"body":{"index.html":{}}}],["bcryptjs",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["binary",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["body",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["bootstrap",{"_index":571,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":657,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":655,"title":{},"body":{"modules.html":{}}}],["building",{"_index":602,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":162,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["canactivate(context",{"_index":164,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["catch",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["catcherror",{"_index":307,"title":{},"body":{"injectables/HelpersService.html":{}}}],["catcherror(error",{"_index":314,"title":{},"body":{"injectables/HelpersService.html":{}}}],["cause",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HelpersService.html":{}}}],["cb",{"_index":338,"title":{},"body":{"injectables/HelpersService.html":{}}}],["cb(null",{"_index":344,"title":{},"body":{"injectables/HelpersService.html":{}}}],["check",{"_index":334,"title":{},"body":{"injectables/HelpersService.html":{}}}],["checkuser",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":21,"title":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"modules/HelpersModule.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":272,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_helpersmodule",{"_index":299,"title":{},"body":{"modules/HelpersModule.html":{},"overview.html":{}}}],["cluster_helpersmodule_exports",{"_index":301,"title":{},"body":{"modules/HelpersModule.html":{},"overview.html":{}}}],["cluster_helpersmodule_providers",{"_index":300,"title":{},"body":{"modules/HelpersModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":392,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":393,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":394,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":452,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_providers",{"_index":453,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":524,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_imports",{"_index":526,"title":{},"body":{"modules/TaskModule.html":{}}}],["cluster_taskmodule_providers",{"_index":525,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["compare",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(data.password",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["comparepassword",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["config/config_jwt",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(jwtservice",{"_index":311,"title":{},"body":{"injectables/HelpersService.html":{}}}],["constructor(prisma",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{}}}],["context",{"_index":167,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('school",{"_index":442,"title":{},"body":{"controllers/SchoolController.html":{}}}],["controller('task",{"_index":511,"title":{},"body":{"controllers/TaskController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["coverage",{"_index":555,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":468,"title":{},"body":{"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["created_at",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["createschool",{"_index":418,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["createschool(@body",{"_index":443,"title":{},"body":{"controllers/SchoolController.html":{}}}],["createschool(data",{"_index":423,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["createschooldto",{"_index":271,"title":{"classes/CreateSchoolDto.html":{}},"body":{"classes/CreateSchoolDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["createtask",{"_index":483,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["createtask(@body",{"_index":513,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(data",{"_index":532,"title":{},"body":{"injectables/TaskService.html":{}}}],["createtask(task_data",{"_index":488,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtaskdto",{"_index":291,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["data",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["data')@apibody({schema",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["data.email",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.id_user",{"_index":546,"title":{},"body":{"injectables/TaskService.html":{}}}],["data.password",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["default",{"_index":329,"title":{},"body":{"injectables/HelpersService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["delete",{"_index":356,"title":{},"body":{"injectables/HelpersService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["delete(':school_id",{"_index":426,"title":{},"body":{"controllers/SchoolController.html":{}}}],["delete(':task_id",{"_index":521,"title":{},"body":{"controllers/TaskController.html":{}}}],["deleteschool",{"_index":419,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["deleteschool(@param('school_id",{"_index":450,"title":{},"body":{"controllers/SchoolController.html":{}}}],["deleteschool(school_id",{"_index":425,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["deletetask",{"_index":484,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["deletetask(@param('task_id",{"_index":522,"title":{},"body":{"controllers/TaskController.html":{}}}],["deletetask(task_id",{"_index":492,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HelpersModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":608,"title":{},"body":{"index.html":{},"properties.html":{}}}],["destination",{"_index":346,"title":{},"body":{"injectables/HelpersService.html":{}}}],["development",{"_index":616,"title":{},"body":{"index.html":{}}}],["diskstorage",{"_index":345,"title":{},"body":{"injectables/HelpersService.html":{}}}],["documentation",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["dto/createschooldto",{"_index":440,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["dto/createtaskdto",{"_index":507,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dto/logindto",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/registerdto",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/updateschooldto",{"_index":466,"title":{},"body":{"injectables/SchoolService.html":{}}}],["dto/updatetaskdto",{"_index":508,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["e2e",{"_index":627,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":603,"title":{},"body":{"index.html":{}}}],["email",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"injectables/TaskService.html":{}}}],["enableshutdownhooks",{"_index":399,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":401,"title":{},"body":{"injectables/PrismaService.html":{}}}],["err",{"_index":171,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["error",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["error(error",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["error(errormessage",{"_index":363,"title":{},"body":{"injectables/HelpersService.html":{}}}],["errormessage",{"_index":361,"title":{},"body":{"injectables/HelpersService.html":{}}}],["exclude",{"_index":308,"title":{},"body":{"injectables/HelpersService.html":{}}}],["exclude(user",{"_index":318,"title":{},"body":{"injectables/HelpersService.html":{}}}],["excludeuser",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["excludeuser.email",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["excludeuser.id",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["excludeuser.name",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["executioncontext",{"_index":165,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["expired",{"_index":382,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"injectables/HelpersService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"modules/HelpersModule.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["exports",{"_index":303,"title":{},"body":{"modules/HelpersModule.html":{},"modules/PrismaModule.html":{}}}],["express",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["express/multer/interfaces/multer",{"_index":351,"title":{},"body":{"injectables/HelpersService.html":{}}}],["extends",{"_index":175,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["extname",{"_index":353,"title":{},"body":{"injectables/HelpersService.html":{}}}],["extname(file.originalname",{"_index":342,"title":{},"body":{"injectables/HelpersService.html":{}}}],["extractjwt",{"_index":370,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":376,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"modules/HelpersModule.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["file.mimetype.match(/\\/(jpg|jpeg|png|gif",{"_index":339,"title":{},"body":{"injectables/HelpersService.html":{}}}],["file.originalname",{"_index":349,"title":{},"body":{"injectables/HelpersService.html":{}}}],["filefilter",{"_index":337,"title":{},"body":{"injectables/HelpersService.html":{}}}],["fileinterceptor",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor('avatar",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["filename",{"_index":348,"title":{},"body":{"injectables/HelpersService.html":{}}}],["filesize",{"_index":332,"title":{},"body":{"injectables/HelpersService.html":{}}}],["format",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["found",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["framework",{"_index":601,"title":{},"body":{"index.html":{}}}],["function",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":595,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":358,"title":{},"body":{"injectables/HelpersService.html":{}}}],["generateaccesstoken",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt",{"_index":309,"title":{},"body":{"injectables/HelpersService.html":{}}}],["generatejwt(payload",{"_index":323,"title":{},"body":{"injectables/HelpersService.html":{}}}],["generateresponse",{"_index":310,"title":{},"body":{"injectables/HelpersService.html":{}}}],["generateresponse(message",{"_index":326,"title":{},"body":{"injectables/HelpersService.html":{}}}],["get(':school_id",{"_index":431,"title":{},"body":{"controllers/SchoolController.html":{}}}],["get(':task_id",{"_index":515,"title":{},"body":{"controllers/TaskController.html":{}}}],["get('profile",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["getallschools",{"_index":420,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["getalltasks",{"_index":485,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["getdetailuser",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["getdetailuser(@req",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["getdetailuser(req",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["getdetailuser(user_id",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getschoolbyid",{"_index":457,"title":{},"body":{"injectables/SchoolService.html":{}}}],["getschoolbyid(school_id",{"_index":462,"title":{},"body":{"injectables/SchoolService.html":{}}}],["getschoolbyschoolid",{"_index":421,"title":{},"body":{"controllers/SchoolController.html":{}}}],["getschoolbyschoolid(@param('school_id",{"_index":446,"title":{},"body":{"controllers/SchoolController.html":{}}}],["getschoolbyschoolid(school_id",{"_index":430,"title":{},"body":{"controllers/SchoolController.html":{}}}],["gettaskbyid",{"_index":486,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gettaskbyid(@param('task_id",{"_index":516,"title":{},"body":{"controllers/TaskController.html":{}}}],["gettaskbyid(task_id",{"_index":498,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["getting",{"_index":597,"title":{"index.html":{}},"body":{}}],["global",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/HelpersModule.html":{},"modules/PrismaModule.html":{}}}],["grow",{"_index":634,"title":{},"body":{"index.html":{}}}],["handlerequest",{"_index":163,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["handlerequest(err",{"_index":168,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["hash",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash(data.password",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["helpers",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["helpers.service",{"_index":304,"title":{},"body":{"modules/HelpersModule.html":{}}}],["helpers/helpers.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["helpersmodule",{"_index":36,"title":{"modules/HelpersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HelpersModule.html":{},"modules.html":{},"overview.html":{}}}],["helpersservice",{"_index":126,"title":{"injectables/HelpersService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/HelpersModule.html":{},"injectables/HelpersService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["helpersservice.avatarmulteroptions",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["here",{"_index":644,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"injectables/TaskService.html":{}}}],["httpexception('bad",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('user",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception(error",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["httpexception(errormessage",{"_index":362,"title":{},"body":{"injectables/HelpersService.html":{}}}],["https://nestjs.com",{"_index":651,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"injectables/TaskService.html":{}}}],["httpstatus.bad_gateway",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"injectables/TaskService.html":{}}}],["httpstatus.bad_request",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HelpersService.html":{}}}],["httpstatus.not_found",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.ok",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HelpersService.html":{}}}],["id",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["id_user",{"_index":293,"title":{},"body":{"classes/CreateTaskDto.html":{},"injectables/TaskService.html":{}}}],["identifier",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":377,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":407,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"modules/HelpersModule.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/TaskModule.html":{}}}],["include",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":402,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"modules/HelpersModule.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["inject",{"_index":538,"title":{},"body":{"injectables/TaskService.html":{}}}],["inject(request",{"_index":540,"title":{},"body":{"injectables/TaskService.html":{}}}],["injectable",{"_index":73,"title":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["injectables",{"_index":74,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["installation",{"_index":613,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":615,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HelpersService.html":{}}}],["isemail",{"_index":285,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty",{"_index":286,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isphonenumber",{"_index":287,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isphonenumber('id",{"_index":290,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isstring",{"_index":288,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["join",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_config",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt_config.expired",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"injectables/HelpersService.html":{}}}],["jwt_config.secret",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{}}}],["jwt_secret!234",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":375,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule.register",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtservice",{"_index":312,"title":{},"body":{"injectables/HelpersService.html":{}}}],["jwtstrategy",{"_index":182,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":648,"title":{},"body":{"index.html":{}}}],["key",{"_index":320,"title":{},"body":{"injectables/HelpersService.html":{}}}],["keys",{"_index":319,"title":{},"body":{"injectables/HelpersService.html":{}}}],["license",{"_index":654,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":631,"title":{},"body":{"index.html":{}}}],["limits",{"_index":331,"title":{},"body":{"injectables/HelpersService.html":{}}}],["login",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":97,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["match",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"modules/HelpersModule.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":388,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["maxlength(20",{"_index":391,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["message",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HelpersService.html":{}}}],["metadata",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["mimetypes",{"_index":335,"title":{},"body":{"injectables/HelpersService.html":{}}}],["minlength",{"_index":389,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(6",{"_index":390,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["miscellaneous",{"_index":594,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":630,"title":{},"body":{"index.html":{}}}],["mode",{"_index":620,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HelpersModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HelpersModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HelpersModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":643,"title":{},"body":{"index.html":{}}}],["multer",{"_index":355,"title":{},"body":{"injectables/HelpersService.html":{}}}],["multeroptions",{"_index":328,"title":{},"body":{"injectables/HelpersService.html":{}}}],["myśliwiec",{"_index":649,"title":{},"body":{"index.html":{}}}],["name",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["nest",{"_index":609,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":653,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/HelpersModule.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":539,"title":{},"body":{"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"injectables/HelpersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":174,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"injectables/HelpersService.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"dependencies.html":{}}}],["new",{"_index":179,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["node.js",{"_index":600,"title":{},"body":{"index.html":{}}}],["number",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTaskDto.html":{},"injectables/HelpersService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["object",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["omit",{"_index":322,"title":{},"body":{"injectables/HelpersService.html":{}}}],["onmoduleinit",{"_index":400,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":632,"title":{},"body":{"index.html":{}}}],["optional",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["options.interface",{"_index":352,"title":{},"body":{"injectables/HelpersService.html":{}}}],["out",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HelpersModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["overview",{"_index":658,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":576,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":436,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["param('school_id",{"_index":448,"title":{},"body":{"controllers/SchoolController.html":{}}}],["param('task_id",{"_index":519,"title":{},"body":{"controllers/TaskController.html":{}}}],["parameters",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["partialtype",{"_index":551,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["partialtype(createschooldto",{"_index":552,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["partialtype(createtaskdto",{"_index":554,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["passport",{"_index":372,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":369,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":373,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["patch",{"_index":437,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["patch(':school_id",{"_index":434,"title":{},"body":{"controllers/SchoolController.html":{}}}],["patch(':task_id",{"_index":518,"title":{},"body":{"controllers/TaskController.html":{}}}],["path",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"injectables/HelpersService.html":{}}}],["payload",{"_index":325,"title":{},"body":{"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":380,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.exp",{"_index":383,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.name",{"_index":381,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":379,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["phone",{"_index":275,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["please",{"_index":641,"title":{},"body":{"index.html":{}}}],["post",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["post('avatar",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["prisma",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["prisma.service",{"_index":396,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":406,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":398,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":37,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":196,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["process.env.max_file_size",{"_index":333,"title":{},"body":{"injectables/HelpersService.html":{}}}],["production",{"_index":622,"title":{},"body":{"index.html":{}}}],["profile",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["progressive",{"_index":599,"title":{},"body":{"index.html":{}}}],["project",{"_index":633,"title":{},"body":{"index.html":{}}}],["properties",{"_index":149,"title":{"properties.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/HelpersService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"properties.html":{}}}],["property",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HelpersModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["public",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["public/uploads/images",{"_index":347,"title":{},"body":{"injectables/HelpersService.html":{}}}],["read",{"_index":642,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":103,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registered",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["reject",{"_index":340,"title":{},"body":{"injectables/HelpersService.html":{}}}],["repository",{"_index":612,"title":{},"body":{"index.html":{}}}],["req",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/HelpersService.html":{},"injectables/TaskService.html":{}}}],["req.user.id",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["reset",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HelpersModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["response",{"_index":360,"title":{},"body":{"injectables/HelpersService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"modules/HelpersModule.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["rootpath",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":617,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":604,"title":{},"body":{"index.html":{}}}],["schema",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["school",{"_index":417,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["school.controller",{"_index":455,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.service",{"_index":439,"title":{},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{}}}],["school/school.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["school_id",{"_index":428,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["school_name",{"_index":276,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["schoolcontroller",{"_index":415,"title":{"controllers/SchoolController.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"coverage.html":{}}}],["schoolmodule",{"_index":38,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schools",{"_index":470,"title":{},"body":{"injectables/SchoolService.html":{}}}],["schoolservice",{"_index":438,"title":{"injectables/SchoolService.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["secret",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"injectables/HelpersService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":378,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":543,"title":{},"body":{"injectables/TaskService.html":{}}}],["server",{"_index":605,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["session",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["side",{"_index":606,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"modules/HelpersModule.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"index.html":{}}}],["sponsors",{"_index":636,"title":{},"body":{"index.html":{}}}],["src/.../config_jwt.ts",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":596,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":75,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:25",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:30",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:37",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:59",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard",{"_index":509,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/auth/auth.guard.ts",{"_index":161,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:12",{"_index":170,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:9",{"_index":166,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/auth/auth.module",{"_index":529,"title":{},"body":{"modules/TaskModule.html":{}}}],["src/auth/auth.module.ts",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:113",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:12",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:42",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:85",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/logindto.ts",{"_index":384,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/logindto.ts:15",{"_index":385,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/logindto.ts:22",{"_index":387,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/registerdto.ts",{"_index":411,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/registerdto.ts:14",{"_index":413,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/registerdto.ts:20",{"_index":412,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/registerdto.ts:27",{"_index":414,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":364,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":368,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":366,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config/config_jwt",{"_index":354,"title":{},"body":{"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{}}}],["src/config/config_jwt.ts",{"_index":565,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/helpers/helpers.module.ts",{"_index":302,"title":{},"body":{"modules/HelpersModule.html":{}}}],["src/helpers/helpers.service",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["src/helpers/helpers.service.ts",{"_index":305,"title":{},"body":{"injectables/HelpersService.html":{},"coverage.html":{}}}],["src/helpers/helpers.service.ts:12",{"_index":321,"title":{},"body":{"injectables/HelpersService.html":{}}}],["src/helpers/helpers.service.ts:23",{"_index":324,"title":{},"body":{"injectables/HelpersService.html":{}}}],["src/helpers/helpers.service.ts:31",{"_index":327,"title":{},"body":{"injectables/HelpersService.html":{}}}],["src/helpers/helpers.service.ts:39",{"_index":350,"title":{},"body":{"injectables/HelpersService.html":{}}}],["src/helpers/helpers.service.ts:66",{"_index":315,"title":{},"body":{"injectables/HelpersService.html":{}}}],["src/helpers/helpers.service.ts:9",{"_index":313,"title":{},"body":{"injectables/HelpersService.html":{}}}],["src/main.ts",{"_index":569,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module.ts",{"_index":395,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":397,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":403,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":405,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/school/dto/createschooldto.ts",{"_index":273,"title":{},"body":{"classes/CreateSchoolDto.html":{},"coverage.html":{}}}],["src/school/dto/createschooldto.ts:14",{"_index":280,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/school/dto/createschooldto.ts:19",{"_index":278,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/school/dto/createschooldto.ts:25",{"_index":282,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/school/dto/createschooldto.ts:8",{"_index":283,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/school/dto/updateschooldto.ts",{"_index":550,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["src/school/school.controller.ts",{"_index":416,"title":{},"body":{"controllers/SchoolController.html":{},"coverage.html":{}}}],["src/school/school.controller.ts:20",{"_index":424,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:25",{"_index":429,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:30",{"_index":432,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:35",{"_index":435,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:43",{"_index":427,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.module.ts",{"_index":454,"title":{},"body":{"modules/SchoolModule.html":{}}}],["src/school/school.service.ts",{"_index":456,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["src/school/school.service.ts:11",{"_index":459,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:22",{"_index":461,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:39",{"_index":463,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:56",{"_index":465,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:75",{"_index":460,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:8",{"_index":458,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/task/dto/createtaskdto.ts",{"_index":292,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/task/dto/createtaskdto.ts:10",{"_index":298,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["src/task/dto/createtaskdto.ts:15",{"_index":297,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["src/task/dto/createtaskdto.ts:5",{"_index":296,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["src/task/dto/updatetaskdto.ts",{"_index":553,"title":{},"body":{"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["src/task/task.controller.ts",{"_index":481,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["src/task/task.controller.ts:25",{"_index":497,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:32",{"_index":490,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:39",{"_index":500,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:46",{"_index":504,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:56",{"_index":494,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.module.ts",{"_index":527,"title":{},"body":{"modules/TaskModule.html":{}}}],["src/task/task.service.ts",{"_index":530,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/task/task.service.ts:20",{"_index":535,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:43",{"_index":536,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:57",{"_index":533,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:69",{"_index":537,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:84",{"_index":534,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:9",{"_index":531,"title":{},"body":{"injectables/TaskService.html":{}}}],["start",{"_index":618,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":621,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":623,"title":{},"body":{"index.html":{}}}],["started",{"_index":598,"title":{"index.html":{}},"body":{}}],["starter",{"_index":611,"title":{},"body":{"index.html":{}}}],["statements",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/HelpersService.html":{},"dependencies.html":{}}}],["statuscode",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HelpersService.html":{}}}],["stay",{"_index":645,"title":{},"body":{"index.html":{}}}],["storage",{"_index":343,"title":{},"body":{"injectables/HelpersService.html":{}}}],["strategy",{"_index":371,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/HelpersService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["sub",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["success",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["super",{"_index":374,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":177,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["support",{"_index":637,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":656,"title":{},"body":{"modules.html":{}}}],["table",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":482,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["task.controller",{"_index":528,"title":{},"body":{"modules/TaskModule.html":{}}}],["task.service",{"_index":506,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["task/task.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["task_data",{"_index":491,"title":{},"body":{"controllers/TaskController.html":{}}}],["task_description",{"_index":294,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task_id",{"_index":495,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["task_name",{"_index":295,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["taskcontroller",{"_index":480,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmodule",{"_index":39,"title":{"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["tasks",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["taskservice",{"_index":505,"title":{"injectables/TaskService.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":626,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":629,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":628,"title":{},"body":{"index.html":{}}}],["tests",{"_index":625,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":635,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":408,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":409,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.helpers.catcherror(error",{"_index":469,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.helpers.exclude(user",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.helpers.generatejwt",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.helpers.generateresponse",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["this.helpers.generateresponse('failed",{"_index":476,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.helpers.generateresponse('find",{"_index":474,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.helpers.generateresponse('login",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.helpers.generateresponse('no",{"_index":472,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.helpers.generateresponse('success",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.helpers.generateresponse('successfully",{"_index":544,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.helpers.generateresponse('user",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":359,"title":{},"body":{"injectables/HelpersService.html":{}}}],["this.prisma.school.create",{"_index":467,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.school.delete",{"_index":479,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.school.findfirst",{"_index":473,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.school.findmany",{"_index":471,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.school.update",{"_index":475,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.tasks.create",{"_index":547,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.delete",{"_index":549,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findfirst",{"_index":545,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findmany",{"_index":541,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.update",{"_index":548,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.users.create",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.findfirst",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.update",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.req.user.id",{"_index":542,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.service.createschool(data",{"_index":444,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.service.createtask(task_data",{"_index":514,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.service.deleteschool(+school_id",{"_index":451,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.service.deletetask(+task_id",{"_index":523,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.service.getallschools",{"_index":445,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.service.getalltasks",{"_index":512,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.service.getdetailuser(req.user.id",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.getschoolbyid(+school_id",{"_index":447,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.service.gettaskbyid(+task_id",{"_index":517,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.service.login(data",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.register(data",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.updateschool(+school_id",{"_index":449,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.service.updatetaskbyid(+task_id",{"_index":520,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.service.uploadavatar",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["throw",{"_index":178,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/HelpersService.html":{}}}],["touch",{"_index":646,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"injectables/TaskService.html":{}}}],["try",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["twitter",{"_index":652,"title":{},"body":{"index.html":{}}}],["type",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":610,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":172,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["undefined})@useinterceptors(undefined)@post('avatar",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["unit",{"_index":624,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["unlicensed",{"_index":664,"title":{},"body":{"properties.html":{}}}],["unsupported",{"_index":341,"title":{},"body":{"injectables/HelpersService.html":{}}}],["update",{"_index":477,"title":{},"body":{"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["updated",{"_index":478,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updateduseravatar",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateschool",{"_index":422,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["updateschool(school_id",{"_index":433,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["updateschooldto",{"_index":464,"title":{"classes/UpdateSchoolDto.html":{}},"body":{"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["updatetaskbyid",{"_index":487,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskbyid(task_id",{"_index":501,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskdto",{"_index":502,"title":{"classes/UpdateTaskDto.html":{}},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["upload",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HelpersService.html":{}}}],["uploadavatar",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["uploadavatar(@req",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["uploadavatar(req",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["uploadavatar(user_id",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadedfile",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["uploads/images",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard)@apibearerauth('accesstoken')@apiconsumes('multipart/form",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@apibearerauth('accesstoken')@delete(':task_id",{"_index":493,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@apibearerauth('accesstoken')@get",{"_index":496,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@apibearerauth('accesstoken')@get(':task_id",{"_index":499,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@apibearerauth('accesstoken')@get('profile",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@apibearerauth('accesstoken')@patch(':task_id",{"_index":503,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@apibearerauth('accesstoken')@post",{"_index":489,"title":{},"body":{"controllers/TaskController.html":{}}}],["useinterceptors",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":169,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/HelpersService.html":{},"injectables/TaskService.html":{}}}],["user.password",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["user[key",{"_index":357,"title":{},"body":{"injectables/HelpersService.html":{}}}],["user_id",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":365,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":367,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":289,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"dependencies.html":{}}}],["value",{"_index":330,"title":{},"body":{"injectables/HelpersService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":665,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":662,"title":{},"body":{"properties.html":{}}}],["void",{"_index":317,"title":{},"body":{"injectables/HelpersService.html":{}}}],["watch",{"_index":619,"title":{},"body":{"index.html":{}}}],["website",{"_index":650,"title":{},"body":{"index.html":{}}}],["world",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["yarn",{"_index":614,"title":{},"body":{"index.html":{}}}],["yes",{"_index":316,"title":{},"body":{"injectables/HelpersService.html":{}}}],["you'd",{"_index":640,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HelpersModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nHelpersModule\n\nHelpersModule\n\nAppModule -->\n\nHelpersModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            HelpersModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TaskModule } from './task/task.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwt_config } from './config/config_jwt';\nimport { HelpersModule } from './helpers/helpers.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { SchoolModule } from './school/school.module';\n\n@Module({\n  imports: [\n    TaskModule,\n    PrismaModule,\n    JwtModule.register({\n      secret: jwt_config.secret,\n      signOptions: {\n        expiresIn: jwt_config.expired,\n      },\n      global: true,\n    }),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public'),\n    }),\n    HelpersModule,\n    AuthModule,\n    SchoolModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDetailUser\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDetailUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDetailUser(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@ApiBearerAuth('accessToken')@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAvatar(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@ApiBearerAuth('accessToken')@ApiConsumes('multipart/form-data')@ApiBody({schema: undefined})@UseInterceptors(undefined)@Post('avatar')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Req,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dto/LoginDto';\nimport { RegisterDto } from './dto/RegisterDto';\nimport { AuthGuard } from './auth.guard';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { HelpersService } from 'src/helpers/helpers.service';\nimport { ApiBearerAuth, ApiBody, ApiConsumes, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private service: AuthService) {}\n\n  @Post('register')\n  async register(@Body() data: RegisterDto) {\n    return await this.service.register(data);\n  }\n\n  @Post('login')\n  async login(@Body() data: LoginDto) {\n    return await this.service.login(data);\n  }\n\n  @UseGuards(AuthGuard)\n  @ApiBearerAuth('accessToken')\n  @Get('profile')\n  async getDetailUser(@Req() req) {\n    return await this.service.getDetailUser(req.user.id);\n  }\n\n  @UseGuards(AuthGuard)\n  @ApiBearerAuth('accessToken')\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        avatar: {\n          type: 'string',\n          format: 'binary',\n        },\n      },\n    },\n  })\n  @UseInterceptors(\n    FileInterceptor('avatar', HelpersService.avatarMulterOptions),\n  )\n  @Post('avatar')\n  async uploadAvatar(@Req() req, @UploadedFile() file: Express.Multer.File) {\n    return await this.service.uploadAvatar(\n      req.user.id,\n      'uploads/images/' + file.filename,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard as AuthGuardPassport } from '@nestjs/passport';\n@Injectable()\nexport class AuthGuard extends AuthGuardPassport('jwt') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n  handleRequest(err, user, info) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDetailUser\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, helpers: HelpersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helpers\n                                                  \n                                                        \n                                                                        HelpersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDetailUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDetailUser(user_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: RegisterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAvatar(user_id: number, avatar: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    avatar\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { HelpersService } from 'src/helpers/helpers.service';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { RegisterDto } from './dto/RegisterDto';\nimport { LoginDto } from './dto/LoginDto';\nimport { compare, hash } from 'bcryptjs';\n\n@Injectable()\nexport class AuthService {\n  constructor(private prisma: PrismaService, private helpers: HelpersService) {}\n\n  async register(data: RegisterDto) {\n    try {\n      const checkUser = await this.prisma.users.findFirst({\n        where: { email: data.email },\n      });\n      if (checkUser) {\n        return this.helpers.generateResponse('User already registered');\n      }\n      data.password = await hash(data.password, 12);\n      const user = await this.prisma.users.create({\n        data,\n      });\n      const excludeUser = await this.helpers.exclude(user, [\n        'password',\n        'created_at',\n      ]);\n      return this.helpers.generateResponse(\n        'Register Successfully',\n        excludeUser,\n      );\n    } catch (error) {\n      if (error instanceof HttpException) {\n        throw error;\n      }\n\n      throw new HttpException(error, HttpStatus.BAD_GATEWAY, {\n        cause: new Error(error),\n      });\n    }\n  }\n  async login(data: LoginDto) {\n    try {\n      const user = await this.prisma.users.findFirst({\n        where: { email: data.email },\n        include: { tasks: true },\n      });\n      let comparePassword: string;\n\n      if (user) {\n        comparePassword = await compare(data.password, user.password);\n      }\n\n      if (!user || !comparePassword) {\n        throw new HttpException(\n          'Email or password not match',\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n\n      const excludeUser = await this.helpers.exclude(user, [\n        'password',\n        'created_at',\n      ]);\n\n      const generateAccessToken = await this.helpers.generateJWT({\n        sub: excludeUser.id,\n        email: excludeUser.email,\n        name: excludeUser.name,\n      });\n\n      return this.helpers.generateResponse('Login success', {\n        ...excludeUser,\n        accessToken: generateAccessToken,\n      });\n    } catch (error) {\n      if (error instanceof HttpException) {\n        throw error;\n      }\n\n      throw new HttpException(error, HttpStatus.BAD_GATEWAY);\n    }\n  }\n\n  async getDetailUser(user_id: number) {\n    try {\n      const user = await this.prisma.users.findFirst({\n        where: { id: user_id },\n        include: { tasks: true },\n      });\n      const excludeUser = await this.helpers.exclude(user, [\n        'password',\n        'created_at',\n      ]);\n      if (!excludeUser) {\n        throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n      }\n\n      return {\n        statusCode: HttpStatus.OK,\n        data: user,\n        message: 'Success get profile',\n      };\n    } catch (error) {\n      if (error instanceof HttpException) {\n        throw error;\n      }\n\n      throw new HttpException(error, HttpStatus.BAD_GATEWAY);\n    }\n  }\n\n  async uploadAvatar(user_id: number, avatar: string) {\n    try {\n      const user = await this.prisma.users.findFirst({\n        where: { id: user_id },\n      });\n\n      if (!user) {\n        throw new HttpException('User not found', HttpStatus.BAD_REQUEST);\n      }\n      const updatedUserAvatar = await this.prisma.users.update({\n        where: {\n          id: user_id,\n        },\n        data: {\n          avatar: avatar,\n        },\n      });\n\n      if (!updatedUserAvatar) {\n        throw new HttpException('Bad Request', HttpStatus.BAD_REQUEST);\n      }\n\n      return this.helpers.generateResponse('Success Upload Avatar');\n    } catch (error) {\n      if (error instanceof HttpException) {\n        throw error;\n      }\n\n      throw new HttpException(error, HttpStatus.BAD_GATEWAY);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchoolDto.html":{"url":"classes/CreateSchoolDto.html","title":"class - CreateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/CreateSchoolDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                school_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/CreateSchoolDto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/CreateSchoolDto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@IsPhoneNumber('ID')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/CreateSchoolDto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/CreateSchoolDto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsPhoneNumber, IsString } from 'class-validator';\n\nexport class CreateSchoolDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  school_name: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email?: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  address?: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @IsPhoneNumber('ID')\n  phone?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/CreateTaskDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                task_description\n                            \n                            \n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/CreateTaskDto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/CreateTaskDto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/CreateTaskDto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateTaskDto {\n  id_user: number;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  task_name: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  task_description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelpersModule.html":{"url":"modules/HelpersModule.html","title":"module - HelpersModule","body":"\n                   \n\n\n\n\n    Modules\n    HelpersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HelpersModule\n\n\n\ncluster_HelpersModule_providers\n\n\n\ncluster_HelpersModule_exports\n\n\n\n\nHelpersService \n\nHelpersService \n\n\n\nHelpersModule\n\nHelpersModule\n\nHelpersService  -->\n\nHelpersModule->HelpersService \n\n\n\n\n\nHelpersService\n\nHelpersService\n\nHelpersModule -->\n\nHelpersService->HelpersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/helpers/helpers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HelpersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HelpersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { HelpersService } from './helpers.service';\n\n@Global()\n@Module({\n  providers: [HelpersService],\n  exports: [HelpersService],\n})\nexport class HelpersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelpersService.html":{"url":"injectables/HelpersService.html","title":"injectable - HelpersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HelpersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/helpers/helpers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                avatarMulterOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catchError\n                            \n                            \n                                exclude\n                            \n                            \n                                    Async\n                                generateJWT\n                            \n                            \n                                generateResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/helpers/helpers.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catchError\n                        \n                    \n                \n            \n            \n                \ncatchError(error: any, message?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/helpers/helpers.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exclude\n                        \n                    \n                \n            \n            \n                \nexclude(user: User, keys: Key[])\n                \n            \n\n\n            \n                \n                    Defined in src/helpers/helpers.service.ts:12\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        User\n                        Key\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    keys\n                                    \n                                            Key[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Omit\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateJWT\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateJWT(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/helpers/helpers.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateResponse\n                        \n                    \n                \n            \n            \n                \ngenerateResponse(message: string, data?: any, statusCode?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/helpers/helpers.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    statusCode\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { statusCode: number; message: string; data: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        avatarMulterOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MulterOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    // limits: {\n    //   fileSize: +process.env.MAX_FILE_SIZE,\n    // },\n    // Check the mimetypes to allow for upload\n    fileFilter: (req: any, file: any, cb: any) => {\n      if (!file.mimetype.match(/\\/(jpg|jpeg|png|gif)$/)) {\n        // Reject file\n        cb(\n          new HttpException(\n            `Unsupported file type ${extname(file.originalname)}`,\n            HttpStatus.BAD_REQUEST,\n          ),\n          false,\n        );\n      }\n      // Allow storage of file\n      cb(null, true);\n    },\n    storage: diskStorage({\n      destination: 'public/uploads/images',\n      filename: (req, file, cb) => {\n        cb(null, file.originalname);\n      },\n    }),\n  }\n                    \n                \n                    \n                        \n                                Defined in src/helpers/helpers.service.ts:39\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { MulterOptions } from '@nestjs/platform-express/multer/interfaces/multer-options.interface';\nimport { extname } from 'path';\nimport { jwt_config } from 'src/config/config_jwt';\nimport { diskStorage } from 'multer';\n\n@Injectable()\nexport class HelpersService {\n  constructor(private jwtService: JwtService) {}\n  // Exclude keys from user\n  exclude(\n    user: User,\n    keys: Key[],\n  ): Omit {\n    for (const key of keys) {\n      delete user[key];\n    }\n    return user;\n  }\n\n  //generate jwt\n  async generateJWT(payload: any) {\n    return this.jwtService.sign(payload, {\n      secret: jwt_config.secret,\n      expiresIn: jwt_config.expired,\n    });\n  }\n\n  //generate response\n  generateResponse(message: string, data?: any, statusCode?: number) {\n    return {\n      statusCode: statusCode | HttpStatus.OK,\n      message,\n      data,\n    };\n  }\n\n  static avatarMulterOptions: MulterOptions = {\n    // limits: {\n    //   fileSize: +process.env.MAX_FILE_SIZE,\n    // },\n    // Check the mimetypes to allow for upload\n    fileFilter: (req: any, file: any, cb: any) => {\n      if (!file.mimetype.match(/\\/(jpg|jpeg|png|gif)$/)) {\n        // Reject file\n        cb(\n          new HttpException(\n            `Unsupported file type ${extname(file.originalname)}`,\n            HttpStatus.BAD_REQUEST,\n          ),\n          false,\n        );\n      }\n      // Allow storage of file\n      cb(null, true);\n    },\n    storage: diskStorage({\n      destination: 'public/uploads/images',\n      filename: (req, file, cb) => {\n        cb(null, file.originalname);\n      },\n    }),\n  };\n\n  catchError(error: any, message?: string) {\n    const errorMessage = message || error;\n    if (error instanceof HttpException) {\n      throw error;\n    }\n\n    throw new HttpException(errorMessage, HttpStatus.BAD_GATEWAY, {\n      cause: new Error(errorMessage),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { jwt_config } from 'src/config/config_jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwt_config.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return {\n      id: payload.sub,\n      email: payload.email,\n      name: payload.name,\n      expired: payload.exp,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/LoginDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/LoginDto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/LoginDto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class LoginDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/RegisterDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/RegisterDto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/RegisterDto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/RegisterDto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class RegisterDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SchoolController.html":{"url":"controllers/SchoolController.html","title":"controller - SchoolController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SchoolController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                school\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSchool\n                            \n                            \n                                    Async\n                                deleteSchool\n                            \n                            \n                                    Async\n                                getAllSchools\n                            \n                            \n                                    Async\n                                getSchoolBySchoolId\n                            \n                            \n                                    Async\n                                updateSchool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSchool(data: CreateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/school/school.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteSchool(school_id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':school_id')\n                \n            \n\n            \n                \n                    Defined in src/school/school.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    school_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllSchools\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllSchools()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/school/school.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSchoolBySchoolId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSchoolBySchoolId(school_id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':school_id')\n                \n            \n\n            \n                \n                    Defined in src/school/school.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    school_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSchool(school_id, data: CreateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':school_id')\n                \n            \n\n            \n                \n                    Defined in src/school/school.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    school_id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CreateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { CreateSchoolDto } from './dto/CreateSchoolDto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('school')\n@Controller('school')\nexport class SchoolController {\n  constructor(private service: SchoolService) {}\n\n  @Post()\n  async createSchool(@Body() data: CreateSchoolDto) {\n    return this.service.createSchool(data);\n  }\n\n  @Get()\n  async getAllSchools() {\n    return this.service.getAllSchools();\n  }\n\n  @Get(':school_id')\n  async getSchoolBySchoolId(@Param('school_id') school_id: number) {\n    return this.service.getSchoolById(+school_id);\n  }\n\n  @Patch(':school_id')\n  async updateSchool(\n    @Param('school_id') school_id,\n    @Body() data: CreateSchoolDto,\n  ) {\n    return this.service.updateSchool(+school_id, data);\n  }\n\n  @Delete(':school_id')\n  async deleteSchool(@Param('school_id') school_id: number) {\n    return this.service.deleteSchool(+school_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nSchoolService\n\nSchoolService\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SchoolController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { SchoolController } from './school.controller';\n\n@Module({\n  providers: [SchoolService],\n  controllers: [SchoolController],\n})\nexport class SchoolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSchool\n                            \n                            \n                                    Async\n                                deleteSchool\n                            \n                            \n                                    Async\n                                getAllSchools\n                            \n                            \n                                    Async\n                                getSchoolById\n                            \n                            \n                                    Async\n                                updateSchool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, helpers: HelpersService)\n                    \n                \n                        \n                            \n                                Defined in src/school/school.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helpers\n                                                  \n                                                        \n                                                                        HelpersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSchool(data: CreateSchoolDto)\n                \n            \n\n\n            \n                \n                    Defined in src/school/school.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteSchool(school_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/school/school.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    school_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllSchools\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllSchools()\n                \n            \n\n\n            \n                \n                    Defined in src/school/school.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSchoolById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSchoolById(school_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/school/school.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    school_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSchool(school_id: number, data: UpdateSchoolDto)\n                \n            \n\n\n            \n                \n                    Defined in src/school/school.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    school_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { HelpersService } from 'src/helpers/helpers.service';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateSchoolDto } from './dto/CreateSchoolDto';\nimport { UpdateSchoolDto } from './dto/UpdateSchoolDto';\n\n@Injectable()\nexport class SchoolService {\n  constructor(private prisma: PrismaService, private helpers: HelpersService) {}\n\n  async createSchool(data: CreateSchoolDto) {\n    try {\n      const school = await this.prisma.school.create({ data });\n      return this.helpers.generateResponse(\n        'Create school successfully',\n        school,\n      );\n    } catch (error) {\n      return this.helpers.catchError(error);\n    }\n  }\n  async getAllSchools() {\n    try {\n      const schools = await this.prisma.school.findMany();\n\n      if (!schools) {\n        return this.helpers.generateResponse('No School found');\n      }\n\n      return this.helpers.generateResponse(\n        'Get all School successfully',\n        schools,\n      );\n    } catch (error) {\n      return this.helpers.catchError(error);\n    }\n  }\n\n  async getSchoolById(school_id: number) {\n    try {\n      const school = await this.prisma.school.findFirst({\n        where: {\n          id: school_id,\n        },\n      });\n      if (!school) {\n        return this.helpers.generateResponse('No School found');\n      }\n\n      return this.helpers.generateResponse('Find School successfully', school);\n    } catch (error) {\n      return this.helpers.catchError(error);\n    }\n  }\n\n  async updateSchool(school_id: number, data: UpdateSchoolDto) {\n    try {\n      const school = await this.prisma.school.update({\n        where: {\n          id: school_id,\n        },\n        data: data,\n      });\n      if (!school) {\n        return this.helpers.generateResponse('Failed update school');\n      }\n      return this.helpers.generateResponse(\n        'Updated school successfully',\n        school,\n      );\n    } catch (error) {\n      return this.helpers.catchError(error);\n    }\n  }\n  async deleteSchool(school_id: number) {\n    try {\n      const school = await this.prisma.school.delete({\n        where: {\n          id: school_id,\n        },\n      });\n      if (!school) {\n        return this.helpers.generateResponse('Failed delete school');\n      }\n      return this.helpers.generateResponse(\n        'Delete school successfully',\n        school,\n      );\n    } catch (error) {\n      return this.helpers.catchError(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTask\n                            \n                            \n                                    Async\n                                deleteTask\n                            \n                            \n                                    Async\n                                getAllTasks\n                            \n                            \n                                    Async\n                                getTaskById\n                            \n                            \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTask(task_data: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@ApiBearerAuth('accessToken')@Post()\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_data\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTask(task_id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@ApiBearerAuth('accessToken')@Delete(':task_id')\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllTasks\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTasks()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@ApiBearerAuth('accessToken')@Get()\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaskById(task_id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@ApiBearerAuth('accessToken')@Get(':task_id')\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTaskById(task_id: number, task_data: UpdateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@ApiBearerAuth('accessToken')@Patch(':task_id')\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    task_data\n                                    \n                                                UpdateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { TaskService } from './task.service';\nimport { CreateTaskDto } from './dto/CreateTaskDto';\nimport { UpdateTaskDto } from './dto/UpdateTaskDto';\nimport { AuthGuard } from 'src/auth/auth.guard';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('task')\n@Controller('task')\nexport class TaskController {\n  constructor(private service: TaskService) {}\n\n  @UseGuards(AuthGuard)\n  @ApiBearerAuth('accessToken')\n  @Get()\n  async getAllTasks() {\n    return await this.service.getAllTasks();\n  }\n\n  @UseGuards(AuthGuard)\n  @ApiBearerAuth('accessToken')\n  @Post()\n  async createTask(@Body() task_data: CreateTaskDto) {\n    return await this.service.createTask(task_data);\n  }\n\n  @UseGuards(AuthGuard)\n  @ApiBearerAuth('accessToken')\n  @Get(':task_id')\n  async getTaskById(@Param('task_id') task_id: number) {\n    return await this.service.getTaskById(+task_id);\n  }\n\n  @UseGuards(AuthGuard)\n  @ApiBearerAuth('accessToken')\n  @Patch(':task_id')\n  async updateTaskById(\n    @Param('task_id') task_id: number,\n    @Body() task_data: UpdateTaskDto,\n  ) {\n    return await this.service.updateTaskById(+task_id, task_data);\n  }\n\n  @UseGuards(AuthGuard)\n  @ApiBearerAuth('accessToken')\n  @Delete(':task_id')\n  async deleteTask(@Param('task_id') task_id: number) {\n    return await this.service.deleteTask(+task_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_TaskModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nAuthModule->TaskModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskService } from './task.service';\nimport { TaskController } from './task.controller';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  imports: [AuthModule],\n  providers: [TaskService],\n  controllers: [TaskController],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTask\n                            \n                            \n                                    Async\n                                deleteTask\n                            \n                            \n                                    Async\n                                getAllTasks\n                            \n                            \n                                    Async\n                                getTaskById\n                            \n                            \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, helpers: HelpersService, req: any)\n                    \n                \n                        \n                            \n                                Defined in src/task/task.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helpers\n                                                  \n                                                        \n                                                                        HelpersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTask(data: CreateTaskDto)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTask(task_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllTasks\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTasks()\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:20\n                \n            \n\n\n            \n                \n                    Get all tasks\n\n\n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaskById(task_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTaskById(task_id: number, data: UpdateTaskDto)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Inject, Injectable } from '@nestjs/common';\nimport { CreateTaskDto } from './dto/CreateTaskDto';\nimport { UpdateTaskDto } from './dto/UpdateTaskDto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { HelpersService } from 'src/helpers/helpers.service';\nimport { REQUEST } from '@nestjs/core';\n\n@Injectable()\nexport class TaskService {\n  constructor(\n    private prisma: PrismaService,\n    private helpers: HelpersService,\n    @Inject(REQUEST) private req: any,\n  ) {}\n\n  /**\n   * Get all tasks\n   * @returns\n   */\n  async getAllTasks() {\n    try {\n      const tasks = await this.prisma.tasks.findMany({\n        where: {\n          id_user: this.req.user.id,\n        },\n        include: {\n          user: {\n            select: {\n              id: true,\n              avatar: true,\n              email: true,\n              name: true,\n            },\n          },\n        },\n      });\n      return this.helpers.generateResponse('Successfully get all tasks', tasks);\n    } catch (error) {\n      return new HttpException(error, HttpStatus.BAD_GATEWAY);\n    }\n  }\n\n  async getTaskById(task_id: number) {\n    try {\n      const task = await this.prisma.tasks.findFirst({\n        where: {\n          id: task_id,\n          id_user: this.req.user.id,\n        },\n      });\n      return this.helpers.generateResponse('Successfully get task by id', task);\n    } catch (error) {\n      return new HttpException(error, HttpStatus.BAD_GATEWAY);\n    }\n  }\n\n  async createTask(data: CreateTaskDto) {\n    try {\n      data.id_user = this.req.user.id;\n      const task = await this.prisma.tasks.create({\n        data: data,\n      });\n      return this.helpers.generateResponse('Successfully create task', task);\n    } catch (error) {\n      return new HttpException(error, HttpStatus.BAD_GATEWAY);\n    }\n  }\n\n  async updateTaskById(task_id: number, data: UpdateTaskDto) {\n    try {\n      data.id_user = this.req.user.id;\n      const task = await this.prisma.tasks.update({\n        data: data,\n        where: {\n          id: task_id,\n        },\n      });\n      return this.helpers.generateResponse('Successfully update task', task);\n    } catch (error) {\n      return new HttpException(error, HttpStatus.BAD_GATEWAY);\n    }\n  }\n\n  async deleteTask(task_id: number) {\n    try {\n      const task = await this.prisma.tasks.delete({\n        where: {\n          id: task_id,\n        },\n      });\n      return this.helpers.generateResponse('Successfully delete task', task);\n    } catch (error) {\n      return new HttpException(error, HttpStatus.BAD_GATEWAY);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSchoolDto.html":{"url":"classes/UpdateSchoolDto.html","title":"class - UpdateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/UpdateSchoolDto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateSchoolDto } from './CreateSchoolDto';\n\nexport class UpdateSchoolDto extends PartialType(CreateSchoolDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTaskDto.html":{"url":"classes/UpdateTaskDto.html","title":"class - UpdateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/UpdateTaskDto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTaskDto } from './CreateTaskDto';\n\nexport class UpdateTaskDto extends PartialType(CreateTaskDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/dto/LoginDto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/RegisterDto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/config_jwt.ts\n            \n            variable\n            jwt_config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helpers/helpers.service.ts\n            \n            injectable\n            HelpersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/school/dto/CreateSchoolDto.ts\n            \n            class\n            CreateSchoolDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/school/dto/UpdateSchoolDto.ts\n            \n            class\n            UpdateSchoolDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/school.controller.ts\n            \n            controller\n            SchoolController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/school/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/task/dto/CreateTaskDto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/dto/UpdateTaskDto.ts\n            \n            class\n            UpdateTaskDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/task/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/task/task.service.ts\n            \n            injectable\n            TaskService\n            \n                14 %\n                (1/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.3\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/serve-static : ^3.0.1\n        \n            @nestjs/swagger : ^6.3.0\n        \n            @prisma/client : 4.13.0\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ yarn installRunning the app\n# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\n# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelpersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_HelpersModule\n\n\n\ncluster_HelpersModule_exports\n\n\n\ncluster_HelpersModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nAuthModule->TaskModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nHelpersModule\n\nHelpersModule\n\nAppModule -->\n\nHelpersModule->AppModule\n\n\n\n\n\nHelpersService \n\nHelpersService \n\nHelpersService  -->\n\nHelpersModule->HelpersService \n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nHelpersService\n\nHelpersService\n\nHelpersModule -->\n\nHelpersService->HelpersModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwt_config   (src/.../config_jwt.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config_jwt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwt_config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: 'jwt_secret!234',\n  expired: 3600,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
